{"version":3,"sources":["D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/$_lazy_route_resource lazy","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/Models/catergory.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/Models/link.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/app.component.html","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/app.component.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/app.module.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/addCategory.component.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/addcategory.component.html","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/categories.component.html","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/categories.component.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/addLink.component.html","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/addLink.component.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/links.component.html","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/links.component.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/shared/categoryDataService.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/shared/linkDataService.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/environments/environment.ts","D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/$$_lazy_route_resource lazy\n// module id = ../../../../../ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Link } from \"./link\";\r\n\r\nexport class Category {\r\n    // If desired, you can make some of these optional by adding \"?\" such as links?: Link[]\r\n    // But note that the optional properties must be at the end.\r\n    constructor(\r\n        public idCategory: string,\r\n        public categoryName: string,\r\n        public categoryDescription: string,\r\n        public links: Link[],\r\n        public dateLastAssignedTo: Date,\r\n        public dateCreated: Date,\r\n        public dateLastEdited: Date\r\n    ) { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/Models/catergory.ts","import { Category } from \"./catergory\";\r\n\r\nexport class Link {\r\n    constructor(\r\n        public idLink: string,\r\n        public category: Category,\r\n        public bestBefore: Date,\r\n        public urlString: string,\r\n        public urlStringAbbreviated: string,\r\n        public description: string,\r\n        public dateCreated: Date,\r\n        public dateLastEdited: Date\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/Models/link.ts","module.exports = \"<div>\\r\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{pageTitle}}</a>\\r\\n        <button class=\\\"navbar-toggler\\\"\\r\\n                type=\\\"button\\\"\\r\\n                data-toggle=\\\"collapse\\\"\\r\\n                data-target=\\\"#navbarSupportedContent\\\"\\r\\n                aria-controls=\\\"navbarSupportedContent\\\"\\r\\n                aria-expanded=\\\"false\\\"\\r\\n                aria-label=\\\"Toggle navigation\\\">\\r\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n                <li class=\\\"nav-item active\\\">\\r\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"'/links'\\\">Links<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"'/categories'\\\">Categories</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"{{isButtonEnabled}}\\\" \\r\\n                       (click)=\\\"onCreateDemoDataClick()\\\">{{buttonContent}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </nav>\\r\\n    <div class='container-fluid'>\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/app.component.html\n// module id = ../../../../../ClientApp/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { CategoryDataService } from './shared/categoryDataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'roamclip-root',\r\n  templateUrl: 'app.component.html'\r\n  ,\r\n    styles: [`\r\nthead {\r\n    color: #202020;\r\n}`]\r\n})\r\nexport class AppComponent {\r\n\r\n    constructor(\r\n        private data: CategoryDataService,\r\n        private router: Router) {\r\n    }\r\n\r\n    pageTitle = 'The Roaming Clipboard';\r\n    buttonContent = 'Create Demo Data';\r\n    isButtonEnabled = 'btn btn-primary active';\r\n\r\n    async onCreateDemoDataClick() {\r\n        console.log(\"Create Demo Data.\");\r\n        await this.data.createDemoData();\r\n        this.buttonContent = 'Demo-Data created.';\r\n        this.isButtonEnabled = 'btn btn-primary disabled';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AlertModule } from 'ngx-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpBackend } from '@angular/common/http/src/backend';\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { AddCategoryComponent } from './categories/addCategory.component';\r\nimport { LinksComponent } from './links/links.component';\r\nimport { CategoryDataService } from './shared/categoryDataService';\r\nimport { LinkDataService } from './shared/linkDataService';\r\nimport { AddLinkComponent } from './links/addLink.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'categories', component: CategoriesComponent},\r\n    { path: 'addCategory', component: AddCategoryComponent },\r\n    { path: 'links', component: LinksComponent},\r\n    { path: 'addLink', component: AddLinkComponent },\r\n    { path: '', redirectTo: 'links', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        CategoriesComponent,\r\n        AddCategoryComponent,\r\n        LinksComponent,\r\n        AddLinkComponent\r\n    ],\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { enableTracing: true }),\r\n\r\n        AlertModule.forRoot(),\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        CategoryDataService,\r\n        LinkDataService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/app.module.ts","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryDataService } from '../shared/categoryDataService';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Category } from '../../Models/catergory';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'roamclip-addCategory',\r\n    templateUrl: './addcategory.component.html'\r\n})\r\nexport class AddCategoryComponent {\r\n    constructor(\r\n        private data: CategoryDataService,\r\n        private router: Router) {\r\n    }\r\n\r\n    pageTitle: string = 'Add new category';\r\n\r\n    // If you don't want to have to specify all of the properties as part of the constructor\r\n    // you can make them optional in the model using \"?\"\r\n    category: Category = new Category(\"\",\r\n        \"Test-Category\", \"Test description\", null,\r\n        new Date(), new Date(), new Date());\r\n\r\n    // I don't normally see a Cancel button defined with type=submit.\r\n    // Rather, the cancel is set to type=button and it uses a routerLink to navigate back.\r\n    isAddAction: boolean = false;\r\n\r\n    async onSubmit(form: any) {\r\n        console.log('you submitted value:', form);\r\n        console.log('isAddAction is', this.isAddAction);\r\n        console.log('category: Name', this.category.categoryName);\r\n        console.log('category: Description', this.category.categoryDescription);\r\n        var t = await this.data.postCategory(this.category);\r\n        console.log('putCategory', t);\r\n        this.router.navigate(['/categories'])\r\n    }\r\n\r\n    // Performing the save using Observables\r\n    saveCategory(): void {\r\n        this.data.saveCategory(this.category).subscribe(\r\n            () => this.router.navigate(['/categories'])\r\n        );\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/addCategory.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <br />\\r\\n    <h2>{{pageTitle}}</h2>\\r\\n    <br />\\r\\n\\r\\n    <form class=\\\"form-horizontal\\\" #addCategory=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(addCategory.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"categoryName\\\" class=\\\"control-label col-sm-2\\\">Category</label>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n                <input type=\\\"Text\\\" class=\\\"form-control\\\" id=\\\"categoryName\\\"\\r\\n                       placeholder=\\\"a new category name\\\"\\r\\n                       [(ngModel)]=\\\"category.categoryName\\\" name=\\\"categoryName\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"categoryDescription\\\" class=\\\"control-label col-sm-2\\\">Description</label>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n                <input type=\\\"Text\\\" class=\\\"form-control\\\" id=\\\"categoryDescription\\\"\\r\\n                       placeholder=\\\"a category description\\\"\\r\\n                       [(ngModel)]=\\\"category.categoryDescription\\\" name=\\\"categoryDescription\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                <button type=\\\"submit\\\"\\r\\n                        class=\\\"btn btn-primary\\\">\\r\\n                    Add\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-secondary\\\"\\r\\n                        [routerLink]=\\\"['/categories']\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/addcategory.component.html\n// module id = ../../../../../ClientApp/app/categories/addcategory.component.html\n// module chunks = main","module.exports = \"<div class='panel panel/primary'>\\r\\n    <div class='panel-heading'>\\r\\n        {{tableHeader}}\\r\\n        <button type=\\\"button\\\" [routerLink]=\\\"['/addCategory']\\\"\\r\\n                class=\\\"btn btn-default\\\">Add Category</button>\\r\\n        \\r\\n    </div>\\r\\n    <div class='panel-body'>\\r\\n        <div class='table-responsive'>\\r\\n            <table class='table'>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Category</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>Last assigned to</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor='let item of categories'>\\r\\n                        <td>{{ item.categoryName }}</td>\\r\\n                        <td>{{ item.categoryDescription }}</td>\\r\\n                        <td>{{ item.dateLastAssignedTo | date: 'yyyy-MM-dd (EEE)' }}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/categories.component.html\n// module id = ../../../../../ClientApp/app/categories/categories.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryDataService } from '../shared/categoryDataService';\r\n\r\nimport { getCalendarFormat } from 'ngx-bootstrap/chronos/moment/calendar';\r\nimport { Category } from '../../Models/catergory';  // <-- Note that this folder is misspelled\r\n\r\n@Component({\r\n    selector: 'roamclip-categories',\r\n    templateUrl: './categories.component.html'\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n    // HINT: It's usual that properties come first, before the constructor.\r\n    // And no need for \"public\": Properties are public by default.\r\n\r\n    tableHeader: string = 'Clipboard Categories';\r\n    categories: Category[] = [];\r\n    errorMessage: string;\r\n\r\n    constructor(private categoryDs: CategoryDataService) { }\r\n\r\n    // I added the code for the Observable. You can comment this out to use the async technique instead.\r\n    ngOnInit(): void {\r\n        // this.getCategories().catch(() => { });\r\n        this.categoryDs.loadCategories().subscribe(\r\n            (categories: Category[]) => this.categories = categories,\r\n            (error: any) => this.errorMessage = <any>error\r\n        );\r\n    };\r\n\r\n    async getCategories() {\r\n        this.categories = await this.categoryDs.loadCategoriesAsync();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/categories/categories.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <br />\\r\\n    <h2>{{pageTitle}}</h2>\\r\\n    <br />\\r\\n\\r\\n    <form class=\\\"form\\\" #addLink=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(addLink.value)\\\">\\r\\n        <div class=\\\"forms-group\\\">\\r\\n                <label for=\\\"urlString\\\" class=\\\"control-label\\\">Link (Url)</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <input type=\\\"Text\\\" class=\\\"form-control\\\" id=\\\"urlString\\\"\\r\\n                           placeholder=\\\"paste in a link (url)\\\"\\r\\n                           [(ngModel)]=\\\"link.urlString\\\" name=\\\"urlString\\\">\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"forms-group\\\">\\r\\n            <label for=\\\"category\\\" class=\\\"control-label\\\">Category</label>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <select class=\\\"custom-select col-md-8\\\" \\r\\n                        [(ngModel)]=\\\"selectedCategory.idCategory\\\"\\r\\n                        id=\\\"category\\\" name=\\\"selectedCategory\\\">\\r\\n                    <option selected>Choose category</option>\\r\\n                    <option *ngFor='let catItem of categories'\\r\\n                            value=\\\"{{catItem.idCategory}}\\\">\\r\\n                        {{catItem.categoryName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"forms-group\\\">\\r\\n            <label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"Text\\\" class=\\\"form-control\\\" id=\\\"description\\\"\\r\\n                       placeholder=\\\"a category description\\\"\\r\\n                       [(ngModel)]=\\\"link.description\\\" name=\\\"description\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"forms-group\\\">\\r\\n            <label for=\\\"bestBefore\\\" class=\\\"control-label\\\">Best Before</label>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"bestBefore\\\"\\r\\n                       placeholder=\\\"keep the link until...\\\"\\r\\n                       [(ngModel)]=\\\"link.bestBeforeDate\\\" name=\\\"bestBefore\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"forms-group\\\">\\r\\n            <button type=\\\"submit\\\"\\r\\n                    class=\\\"btn btn-primary\\\">\\r\\n                Add\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-secondary\\\"\\r\\n                    [routerLink]=\\\"['/links']\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/addLink.component.html\n// module id = ../../../../../ClientApp/app/links/addLink.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LinkDataService } from '../shared/linkDataService';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Category } from '../../Models/catergory';\r\nimport { Router } from '@angular/router';\r\nimport { Link } from '../../Models/link';\r\nimport { CategoryDataService } from '../shared/categoryDataService';\r\n\r\n@Component({\r\n    selector: 'roamclip-addCategory',\r\n    templateUrl: './addLink.component.html'\r\n})\r\nexport class AddLinkComponent implements OnInit {\r\n\r\n    pageTitle: string = 'Add new link';\r\n    categories: Category[];\r\n    selectedCategory: Category;\r\n\r\n    constructor(\r\n        private linkDs: LinkDataService,\r\n        private categoryDs: CategoryDataService,\r\n        private router: Router) {\r\n    }\r\n\r\n    // If you don't want to have to specify all of the properties as part of the constructor\r\n    // you can make them optional in the model using \"?\"\r\n    link: Link = new Link(\"\",null,null,\"Url\",\"\",\"Description\",\r\n        new Date(), new Date());\r\n\r\n    // I don't normally see a Cancel button defined with type=submit.\r\n    // Rather, the cancel is set to type=button and it uses a routerLink to navigate back.\r\n    isAddAction: boolean = false;\r\n\r\n    async onSubmit(form: any) {\r\n        console.log('you submitted value:', form);\r\n        console.log('isAddAction is', this.isAddAction);\r\n        console.log('link: Url', this.link.urlString);\r\n        console.log('link: Description', this.link.description);\r\n        this.link.category = this.selectedCategory;\r\n        var t = await this.linkDs.postLink(this.link);\r\n        //console.log('putCategory', t);\r\n        //this.router.navigate(['/links'])\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.categories = await this.categoryDs.loadCategoriesAsync();\r\n        if (this.categories.length > 0) {\r\n            this.selectedCategory = this.categories[0];\r\n        }\r\n    }\r\n\r\n    // Performing the save using Observables\r\n    saveCategory(): void {\r\n        // this.data.saveCategory(this.category).subscribe(\r\n        // () => this.router.navigate(['/categories'])\r\n        //);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/addLink.component.ts","module.exports = \"<div class='panel panel/primary'>\\r\\n    <div class='panel-heading'>\\r\\n        {{tableHeader}}\\r\\n        <button type=\\\"button\\\" [routerLink]=\\\"['/addLink']\\\"\\r\\n                class=\\\"btn btn-default\\\">Add Link</button>\\r\\n    </div>\\r\\n    <div class='panel-body'>\\r\\n        <div class='table-responsive'>\\r\\n            <table class='table'>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Description</th>\\r\\n                        <th>Link</th>\\r\\n                        <th>Category</th>\\r\\n                        <th>Best before</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor='let item of links'>\\r\\n                        <td>{{ item.description }}</td>\\r\\n                        <td><a href=\\\"{{item.urlString}}\\\" target=\\\"_blank\\\">{{ item.urlStringAbbreviated }}</a></td>\\r\\n                        <td>{{ item.category.categoryName }}</td>\\r\\n                        <td>{{ item.bestBefore | date: 'yyyy-MM-dd' }}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/links.component.html\n// module id = ../../../../../ClientApp/app/links/links.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LinkDataService } from '../shared/linkDataService';\r\n\r\nimport { Link } from '../../Models/link';\r\n\r\n@Component({\r\n    selector: 'roamclip-links',\r\n    templateUrl: './links.component.html'\r\n})\r\nexport class LinksComponent implements OnInit {\r\n    tableHeader: string = 'Clipboard Links';\r\n    links: Link[];\r\n\r\n    constructor(private linkDs: LinkDataService) {\r\n    }\r\n\r\n    async ngOnInit() {\r\n        try {\r\n            this.links = await this.linkDs.loadLinksAsync();\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/links/links.component.ts","import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Category } from '../../Models/catergory';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n    })\r\n};\r\n\r\n@Injectable()\r\nexport class CategoryDataService {\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    public headers: HttpHeaders;\r\n\r\n    // typical Angular way to get data from a WebApi\r\n    loadCategories() {\r\n        return this.httpClient.get<Category[]>(\"/api/categories\")\r\n            .pipe(\r\n                tap(c => console.log(JSON.stringify(c))),\r\n                catchError(this.handleError)\r\n            );\r\n    } \r\n\r\n    // error handler for catchError (see above)\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.log(err);\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage: string;\r\n        if (err.error instanceof Error) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Backend returned code ${err.status}, body was: ${err.error}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return new ErrorObservable(errorMessage);\r\n    }\r\n\r\n\r\n    // the more .NET style async way - but equally OK!\r\n    async loadCategoriesAsync(): Promise<Category[]> {\r\n        try {\r\n            console.log(\"BEFORE getting categories.\");\r\n            var t = await this.httpClient.get<Category[]>(\"/api/categories\").toPromise()\r\n            console.log(\"No error occured getting categories.\");\r\n            return t;\r\n\r\n        } catch (e) {\r\n            if (e instanceof HttpErrorResponse) {\r\n                var err: Error = e;\r\n                console.log(\"Error getting categories: \", err.message);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // adding a new category:\r\n    async postCategory(category: Category): Promise<string> {\r\n        try {\r\n            console.log(\"BEFORE putting category:\", category.categoryName);\r\n            var newGuid = await this.httpClient.post<string>(\"/api/categories\",\r\n                category, httpOptions).toPromise();\r\n            console.log(\"No error occured putting category. GUID ID is:\", newGuid)\r\n            return newGuid;\r\n        } catch (e) {\r\n            if (e instanceof HttpErrorResponse) {\r\n                var err: Error = e;\r\n                console.log(\"Error putting category: \", err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Added an example save using Observables.\r\n    saveCategory(category: Category): Observable<Category> {\r\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n        return this.httpClient.post<Category>('/api/categories', category,  { headers: headers} )\r\n        .pipe(\r\n            tap(data => console.log('createCategory: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    //TODO: This has to go in a dedicated DataService.\r\n    async createDemoData(): Promise<string> {\r\n        try {\r\n            console.log(\"BEFORE creating demo data.\");\r\n            var result = await this.httpClient.get<string>(\"/api/sampledata\").toPromise();\r\n            console.log(\"No error requesting to generate demodata.\", result)\r\n            return result;\r\n        } catch (e) {\r\n            if (e instanceof HttpErrorResponse) {\r\n                var err: Error = e;\r\n                console.log(\"Error requesting to generate demodata.\", err.message);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/shared/categoryDataService.ts","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Link } from '../../Models/link';\r\n\r\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n    })\r\n};\r\n\r\n@Injectable()\r\nexport class LinkDataService {\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    // typical Angular way to get data from a WebApi\r\n    loadLinks() {\r\n        return this.httpClient.get<Link[]>(\"/api/links\")\r\n            .pipe(\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    // error handler for catchError (see above)\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.log(err);\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage: string;\r\n        if (err.error instanceof Error) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Backend returned code ${err.status}, body was: ${err.error}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return new ErrorObservable(errorMessage);\r\n    }\r\n\r\n    // the more .NET style async way - but equally OK!\r\n    async loadLinksAsync(): Promise<Link[]> {\r\n        try {\r\n            console.log(\"BEFORE getting categories.\");\r\n            var t = await this.httpClient.get<Link[]>(\"/api/links\").toPromise()\r\n            console.log(\"No error occured getting categories.\");\r\n            return t;\r\n\r\n        } catch (e) {\r\n            if (e instanceof HttpErrorResponse) {\r\n                var err: Error = e;\r\n                console.log(\"Error getting categories: \", err.message);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // adding a new link:\r\n    async postLink(link: Link): Promise<string> {\r\n        try {\r\n            console.log(\"BEFORE putting link:\", link.urlString);\r\n            var newGuid = await this.httpClient.post<string>(\"/api/links\",\r\n                link, httpOptions).toPromise();\r\n            console.log(\"No error occured putting link. GUID ID is:\", newGuid)\r\n            return newGuid;\r\n        } catch (e) {\r\n            if (e instanceof HttpErrorResponse) {\r\n                var err: Error = e;\r\n                console.log(\"Error putting link: \", err.message);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/app/shared/linkDataService.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/GitHubDev/VbAngular/src/RoamingClipBoardApi/ClientApp/main.ts"],"sourceRoot":"webpack:///"}